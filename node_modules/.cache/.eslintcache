[{"/home/ajuri/react-app/AprendiendoReact/src/index.js":"1","/home/ajuri/react-app/AprendiendoReact/src/App.js":"2","/home/ajuri/react-app/AprendiendoReact/src/components/TaskRows.js":"3","/home/ajuri/react-app/AprendiendoReact/src/components/TaskBanner.js":"4","/home/ajuri/react-app/AprendiendoReact/src/components/TaskCreator.js":"5","/home/ajuri/react-app/AprendiendoReact/src/components/VisibilityControl.js":"6","/home/ajuri/react-app/AprendiendoReact/src/components/DeleteData.js":"7","/home/ajuri/react-app/AprendiendoReact/src/reportWebVitals.js":"8"},{"size":500,"mtime":1629236290000,"results":"9","hashOfConfig":"10"},{"size":2638,"mtime":1628788566748,"results":"11","hashOfConfig":"10"},{"size":457,"mtime":1629230165804,"results":"12","hashOfConfig":"10"},{"size":213,"mtime":1628788495194,"results":"13","hashOfConfig":"10"},{"size":990,"mtime":1629230693397,"results":"14","hashOfConfig":"10"},{"size":382,"mtime":1628788498738,"results":"15","hashOfConfig":"10"},{"size":354,"mtime":1628814525213,"results":"16","hashOfConfig":"10"},{"size":362,"mtime":1629236290000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1b3ua2i",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ajuri/react-app/AprendiendoReact/src/index.js",[],"/home/ajuri/react-app/AprendiendoReact/src/App.js",["35","36"],"\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport { TaskRow } from './components/TaskRows';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\nimport { VisibilityControl } from './components/VisibilityControl'\nimport { DeleteData } from './components/DeleteData'\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState('Ale');\n\n  const [taskItems, setTaskItems] = useState([\n    { name: '', completed: true }\n\n  ])\n  const [showCompleted, setShowCompleted] = useState(true)\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n    if (data != null) {\n      setTaskItems(JSON.parse(data));\n    } else {\n      setTaskItems([{}]);\n      setShowCompleted(true);\n    }\n  }, [])\n\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(taskItems))\n  }, [taskItems]);\n\n\n\n\n\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, { name: taskName, completed: false }])\n    }\n  }\n\n  const toggleTask = task =>\n    setTaskItems(taskItems.map(t => (t.name === task.name ? { ...t, completed: !t.completed } : t)))\n\n  const taskTableRows = (completedValue) =>\n    taskItems\n      .filter(task => task.completed === completedValue)\n      .map(task => (\n\n\n        <TaskRow\n          task={task}\n          key={task.name}\n          toggleTask={toggleTask} />\n      ))\n\n\n\n  return (\n    <div className=\"app-main\">\n\n      <TaskCreator callback={createNewTask} />\n      <div>\n        <div className=\"div-1\">\n        <TaskBanner taskItems={taskItems} />\n        <table>\n          <thead>\n            <tr>\n              <th className=\"DescriptionRow\">Tareas</th>\n              <th className=\"HechoRow\">Estado</th>\n            </tr>\n          </thead>\n          <tbody>\n            {taskTableRows(false)}\n          </tbody>\n        </table>\n\n\n\n\n\n        <div className=\"VisibilityControl\">\n          <VisibilityControl\n            description=\"Tareas Completas\"\n            isChecked={showCompleted}\n            callback={checked => setShowCompleted(checked)}\n          />\n        </div>\n        {\n          showCompleted && (\n            <table>\n              <thead>\n                <tr>\n                  <th className=\"DescriptionRow\">Tareas</th>\n                  <th className=\"HechoRow\">Hecho</th>\n                </tr>\n              </thead>\n              <tbody>\n                {taskTableRows(true)}\n\n              </tbody>\n            </table>\n\n          )\n        }\n        <DeleteData />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ajuri/react-app/AprendiendoReact/src/components/TaskRows.js",[],"/home/ajuri/react-app/AprendiendoReact/src/components/TaskBanner.js",[],"/home/ajuri/react-app/AprendiendoReact/src/components/TaskCreator.js",[],"/home/ajuri/react-app/AprendiendoReact/src/components/VisibilityControl.js",[],"/home/ajuri/react-app/AprendiendoReact/src/components/DeleteData.js",[],"/home/ajuri/react-app/AprendiendoReact/src/reportWebVitals.js",[],{"ruleId":"37","severity":1,"message":"38","line":13,"column":10,"nodeType":"39","messageId":"40","endLine":13,"endColumn":18},{"ruleId":"37","severity":1,"message":"41","line":13,"column":20,"nodeType":"39","messageId":"40","endLine":13,"endColumn":31},"no-unused-vars","'userName' is assigned a value but never used.","Identifier","unusedVar","'setUserName' is assigned a value but never used."]