{"ast":null,"code":"var _jsxFileName = \"/home/ajuri/react-app/AprendiendoReact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { TaskRow } from './components/TaskRows';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userName, setUserName] = useState('Ale');\n  const [taskItems, setTaskItems] = useState([{\n    name: 'Tarea',\n    completed: false\n  }, {\n    name: 'Tarea2',\n    completed: false\n  }, {\n    name: 'Tarea3',\n    completed: false\n  }, {\n    name: 'Tarea4',\n    completed: false\n  }]);\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, {\n        name: taskName,\n        completed: false\n      }]);\n    }\n  };\n\n  const toggleTask = task => setTaskItems(taskItems.map(t => t.name === task.name ? { ...t,\n    completed: !t.completed\n  } : t));\n\n  const taskTableRows = () => taskItems.map(task => /*#__PURE__*/_jsxDEV(TaskRow, {\n    task: task,\n    toggleTask: toggleTask\n  }, task.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 3\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TaskCreator, {\n      callback: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBanner, {\n      taskItems: taskItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hecho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskTableRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"uu8m3KbpZl50nDOdBqpwqeZIYbk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ajuri/react-app/AprendiendoReact/src/App.js"],"names":["React","useEffect","useState","TaskRow","TaskBanner","TaskCreator","App","userName","setUserName","taskItems","setTaskItems","name","completed","createNewTask","taskName","find","t","toggleTask","task","map","taskTableRows"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,yBAA3B;AACA,SAASC,WAAT,QAA4B,0BAA5B;;;AAIA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,CACzC;AAACS,IAAAA,IAAI,EAAC,OAAN;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GADyC,EAEzC;AAACD,IAAAA,IAAI,EAAC,QAAN;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAFyC,EAGzC;AAACD,IAAAA,IAAI,EAAC,QAAN;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAHyC,EAIzC;AAACD,IAAAA,IAAI,EAAC,QAAN;AAAgBC,IAAAA,SAAS,EAAE;AAA3B,GAJyC,CAAD,CAA1C;;AAOF,QAAMC,aAAa,GAAGC,QAAQ,IAAI;AAChC,QAAG,CAACL,SAAS,CAACM,IAAV,CAAeC,CAAC,IAAIA,CAAC,CAACL,IAAF,KAAWG,QAA/B,CAAJ,EAA6C;AAC3CJ,MAAAA,YAAY,CAAE,CAAC,GAAGD,SAAJ,EAAe;AAACE,QAAAA,IAAI,EAAEG,QAAP;AAAiBF,QAAAA,SAAS,EAAE;AAA5B,OAAf,CAAF,CAAZ;AACD;AACF,GAJD;;AAMA,QAAMK,UAAU,GAAGC,IAAI,IACvBR,YAAY,CAACD,SAAS,CAACU,GAAV,CAAcH,CAAC,IAAKA,CAAC,CAACL,IAAF,KAAWO,IAAI,CAACP,IAAhB,GAAuB,EAAC,GAAGK,CAAJ;AAAOJ,IAAAA,SAAS,EAAE,CAACI,CAAC,CAACJ;AAArB,GAAvB,GAAyDI,CAA7E,CAAD,CADZ;;AAGA,QAAMI,aAAa,GAAG,MAAMX,SAAS,CAACU,GAAV,CAAcD,IAAI,iBAC5C,QAAC,OAAD;AACA,IAAA,IAAI,EAAEA,IADN;AAGA,IAAA,UAAU,EAAED;AAHZ,KAEKC,IAAI,CAACP,IAFV;AAAA;AAAA;AAAA;AAAA,UAD0B,CAA5B;;AAQE,sBACE;AAAA,4BACE,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,UAAD;AAAY,MAAA,SAAS,EAAEJ;AAAvB;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAA,8BACE;AAAA,+BACA;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACGW,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjDQd,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport { TaskRow } from './components/TaskRows';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\n\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState('Ale');\n\n  const [taskItems, setTaskItems] = useState([\n    {name:'Tarea', completed: false},\n    {name:'Tarea2', completed: false},\n    {name:'Tarea3', completed: false},\n    {name:'Tarea4', completed: false}\n])\n\nconst createNewTask = taskName => {\n  if(!taskItems.find(t => t.name === taskName)){\n    setTaskItems ([...taskItems, {name: taskName, completed: false}])\n  }\n}\n  \nconst toggleTask = task =>\nsetTaskItems(taskItems.map(t => (t.name === task.name ? {...t, completed: !t.completed} : t)))\n\nconst taskTableRows = () => taskItems.map(task => (\n  <TaskRow \n  task={task} \n  key={task.name}\n  toggleTask={toggleTask}/>\n))\n\n\n  return (\n    <div>\n      <TaskCreator callback={createNewTask}/>\n      <TaskBanner taskItems={taskItems}/>\n      <table>\n        <thead>\n        <tr>\n          <th>Descripci√≥n</th>\n          <th>Hecho</th>\n        </tr>\n        </thead>\n        <tbody>\n          {taskTableRows()}\n        </tbody>\n      </table>\n\n    \n\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}