{"ast":null,"code":"var _jsxFileName = \"/home/ajuri/react-app/AprendiendoReact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { TaskRow } from './components/TaskRows';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\nimport { VisibilityControl } from './components/VisibilityControl';\nimport { DeleteData } from './components/DeleteData';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userName, setUserName] = useState('Ale');\n  const [taskItems, setTaskItems] = useState([{\n    name: '',\n    completed: true\n  }]);\n  const [showCompleted, setShowCompleted] = useState(true);\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n\n    if (data != null) {\n      setTaskItems(JSON.parse(data));\n    } else {\n      setTaskItems([{}]);\n      setShowCompleted(true);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(taskItems));\n  }, [taskItems]);\n  useEffect(() => {}, [input]);\n\n  const createNewTask = taskName => {\n    if (!taskItems.find(t => t.name === taskName)) {\n      setTaskItems([...taskItems, {\n        name: taskName,\n        completed: false\n      }]);\n    }\n  };\n\n  const toggleTask = task => setTaskItems(taskItems.map(t => t.name === task.name ? { ...t,\n    completed: !t.completed\n  } : t));\n\n  const taskTableRows = completedValue => taskItems.filter(task => task.completed === completedValue).map(task => /*#__PURE__*/_jsxDEV(TaskRow, {\n    task: task,\n    toggleTask: toggleTask\n  }, task.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Agenda Diaria\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskCreator, {\n      callback: createNewTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TaskBanner, {\n      taskItems: taskItems\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"DescriptionRow\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"HechoRow\",\n            children: \"Estado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskTableRows(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"VisibilityControl\",\n      children: /*#__PURE__*/_jsxDEV(VisibilityControl, {\n        description: \"Tareas Completas\",\n        isChecked: showCompleted,\n        callback: checked => setShowCompleted(checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this), showCompleted && /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"app-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"DescriptionRow\",\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"HechoRow\",\n            children: \"Hecho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskTableRows(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"IA0OB9PMd/U57hBFv10K/f63Fk4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ajuri/react-app/AprendiendoReact/src/App.js"],"names":["React","useEffect","useState","TaskRow","TaskBanner","TaskCreator","VisibilityControl","DeleteData","App","userName","setUserName","taskItems","setTaskItems","name","completed","showCompleted","setShowCompleted","data","localStorage","getItem","JSON","parse","setItem","stringify","input","createNewTask","taskName","find","t","toggleTask","task","map","taskTableRows","completedValue","filter","checked"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport { TaskRow } from './components/TaskRows';\nimport { TaskBanner } from './components/TaskBanner';\nimport { TaskCreator } from './components/TaskCreator';\nimport {VisibilityControl} from './components/VisibilityControl'\nimport {DeleteData} from './components/DeleteData'\n\n\nfunction App() {\n\n  const [userName, setUserName] = useState('Ale');\n\n  const [taskItems, setTaskItems] = useState([\n    {name:'', completed: true}\n    \n])\nconst [showCompleted, setShowCompleted] = useState(true)\n\nuseEffect(() => {\n  let data = localStorage.getItem(\"tasks\");\n  if(data != null){\n    setTaskItems(JSON.parse(data));\n  } else { \n    setTaskItems([{}]);\n    setShowCompleted(true);\n  }\n  }, [])\n  \n  useEffect(() => {\n  localStorage.setItem('tasks', JSON.stringify(taskItems))\n  }, [taskItems]);\n  \nuseEffect(() => {\n\n}, [input])\n  \n\n\n\n\n\nconst createNewTask = taskName => {\n  if(!taskItems.find(t => t.name === taskName)){\n    setTaskItems ([...taskItems, {name: taskName, completed: false}])\n  }\n}\n  \nconst toggleTask = task =>\nsetTaskItems(taskItems.map(t => (t.name === task.name ? {...t, completed: !t.completed} : t)))\n\nconst taskTableRows = (completedValue) => \ntaskItems\n.filter(task => task.completed === completedValue)\n.map(task => (\n \n \n  <TaskRow \n  task={task} \n  key={task.name}\n  toggleTask={toggleTask}/>\n))\n\n\n  return (\n    <div className=\"app-main\">\n      <h1>Agenda Diaria</h1>\n      <TaskCreator callback={createNewTask}/>\n      <TaskBanner taskItems={taskItems}/>\n      <table className=\"app-main\">\n        <thead>\n        <tr>\n          <th className=\"DescriptionRow\">Descripción</th>\n          <th className=\"HechoRow\">Estado</th>\n        </tr>\n        </thead>\n        <tbody>\n          {taskTableRows(false)}\n        </tbody>\n      </table>\n\n    \n\n    \n    \n    <div className=\"VisibilityControl\">\n      <VisibilityControl\n      description=\"Tareas Completas\"\n      isChecked={showCompleted}\n      callback={checked => setShowCompleted(checked)}\n      />\n    </div>\n    {\n      showCompleted && (\n        <table className=\"app-main\">\n          <thead>\n            <tr>\n              <th className=\"DescriptionRow\">Descripción</th>\n              <th className=\"HechoRow\">Hecho</th>\n            </tr>\n          </thead>\n          <tbody>\n            {taskTableRows(true)}\n\n            </tbody>\n                   </table>\n\n      )\n    }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}