{"ast":null,"code":"var _jsxFileName = \"/home/ajuri/react-app/AprendiendoReact/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { TaskRow } from './components/TaskRows';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [userName, setUserName] = useState('Ale');\n  const [taskItems, setTaskItems] = useState([{\n    name: 'Tarea',\n    completed: false\n  }]);\n\n  const toggleTask = task => setTaskItems(taskItems.map(t => t.name === task.name ? { ...t,\n    completed: !t.completed\n  } : t));\n\n  const taskTableRows = () => taskItems.map(task => /*#__PURE__*/_jsxDEV(TaskRow, {\n    task: task,\n    toggleTask: toggleTask\n  }, task.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }, this));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Descripci\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hecho\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: taskTableRows()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"5G/ZeeZHTkKKoeXnwUr5gXY06jA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/ajuri/react-app/AprendiendoReact/src/App.js"],"names":["React","useEffect","useState","TaskRow","App","userName","setUserName","taskItems","setTaskItems","name","completed","toggleTask","task","map","t","taskTableRows"],"mappings":";;;AACA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,KAAD,CAAxC;AAEA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,CAAC;AAACO,IAAAA,IAAI,EAAC,OAAN;AAAeC,IAAAA,SAAS,EAAE;AAA1B,GAAD,CAAD,CAA1C;;AAEF,QAAMC,UAAU,GAAGC,IAAI,IACvBJ,YAAY,CAACD,SAAS,CAACM,GAAV,CAAcC,CAAC,IAAKA,CAAC,CAACL,IAAF,KAAWG,IAAI,CAACH,IAAhB,GAAuB,EAAC,GAAGK,CAAJ;AAAOJ,IAAAA,SAAS,EAAE,CAACI,CAAC,CAACJ;AAArB,GAAvB,GAAyDI,CAA7E,CAAD,CADZ;;AAGA,QAAMC,aAAa,GAAG,MAAMR,SAAS,CAACM,GAAV,CAAcD,IAAI,iBAC5C,QAAC,OAAD;AACA,IAAA,IAAI,EAAEA,IADN;AAGA,IAAA,UAAU,EAAED;AAHZ,KAEKC,IAAI,CAACH,IAFV;AAAA;AAAA;AAAA;AAAA,UAD0B,CAA5B;;AAQE,sBACE;AAAA,2BACE;AAAA,8BACE;AAAA,+BACA;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAA,kBACGM,aAAa;AADhB;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GApCQX,G;;KAAAA,G;AAsCT,eAAeA,GAAf","sourcesContent":["\nimport './App.css';\nimport React, { useEffect, useState } from 'react'\nimport { TaskRow } from './components/TaskRows';\n\nfunction App() {\n\n  const [userName, setUserName] = useState('Ale');\n\n  const [taskItems, setTaskItems] = useState([{name:'Tarea', completed: false}])\n  \nconst toggleTask = task =>\nsetTaskItems(taskItems.map(t => (t.name === task.name ? {...t, completed: !t.completed} : t)))\n\nconst taskTableRows = () => taskItems.map(task => (\n  <TaskRow \n  task={task} \n  key={task.name}\n  toggleTask={toggleTask}/>\n))\n\n\n  return (\n    <div>\n      <table>\n        <thead>\n        <tr>\n          <th>Descripci√≥n</th>\n          <th>Hecho</th>\n        </tr>\n        </thead>\n        <tbody>\n          {taskTableRows()}\n        </tbody>\n      </table>\n\n    \n\n    \n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}